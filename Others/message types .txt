#!/bin/bash

logfile="logfile.log"
normalized_logfile="normalized_logfile.log"

# Replace types in the log file for consistency
sed -e 's/MT 103/MT103/g' \
    -e 's/MT 202 COV/MT202COV/g' \
    -e 's/MT 202/MT202/g' \
    -e 's/PACS 004/PACS004/g' \
    -e 's/PACS 008/PACS008/g' \
    -e 's/PACS 009/PACS009/g' \
    -e 's/004:/PACS004:/g' \
    -e 's/008:/PACS008:/g' \
    -e 's/009:/PACS009:/g' "$logfile" > "$normalized_logfile"

# Process 1st type of logs
echo "Counts for 1st type of logs:"
counts1=$(grep 'Sending BIC' "$normalized_logfile" | awk '
{
    if (match($0, /(MT103|MT202COV|MT202|PACS004|PACS008|PACS009)/, arr)) {
        count[arr[1]]++
    }
}
END {
    for (type in count) {
        print type ": " count[type]
    }
}')
echo "$counts1"

# Process 2nd type of logs
echo "Counts for 2nd type of logs:"
counts2=$(grep -E 'BATCH BIC|FIN BATCH BIC' "$normalized_logfile" | awk '
{
    if (match($0, /(PACS004: [0-9]+|PACS008: [0-9]+|PACS009: [0-9]+|MT103: [0-9]+|MT202: [0-9]+|MT202COV: [0-9]+)/)) {
        split($0, fields, ", ")
        for (i in fields) {
            if (match(fields[i], /(PACS004|PACS008|PACS009|MT103|MT202|MT202COV): [0-9]+/)) {
                split(fields[i], pair, ": ")
                type = pair[1]
                value = pair[2]
                count[type] += value
            }
        }
    }
}
END {
    for (type in count) {
        print type ": " count[type]
    }
}')
echo "$counts2"

# Function to sum counts from both logs
sum_counts() {
    local type="$1"
    local count1=$(echo "$counts1" | grep "$type" | awk -F': ' '{print $2}')
    local count2=$(echo "$counts2" | grep "$type" | awk -F': ' '{print $2}')
    
    # Handle empty values
    count1=${count1:-0}
    count2=${count2:-0}

    # Ensure count1 and count2 are numeric
    if ! [[ "$count1" =~ ^[0-9]+$ ]]; then
        count1=0
    fi
    if ! [[ "$count2" =~ ^[0-9]+$ ]]; then
        count2=0
    fi

    echo $((count1 + count2))
}

# Calculate Total Count
total_count=0
for type in "MT103" "MT202" "MT202COV" "PACS004" "PACS008" "PACS009"; do
    count=$(sum_counts "$type")
    total_count=$((total_count + count))
done

# Calculate Count of MT
mt_count=0
for type in "MT103" "MT202" "MT202COV"; do
    count=$(sum_counts "$type")
    mt_count=$((mt_count + count))
done

# Calculate Count of ISO
iso_count=0
for type in "PACS004" "PACS008" "PACS009"; do
    count=$(sum_counts "$type")
    iso_count=$((iso_count + count))
done

# Print Summary
echo "Summary:"
echo "Total count: $total_count"
echo "Count of MT: $mt_count"
echo "Count of ISO: $iso_count"
